import zivid
from mledge.endpoints.robot import URRobot

[26.13406083063277, -113.98674009470992, 123.07338720260053, 45.39035930131567, 108.66941618554841, 24.167914038416438]

[49.357286282302866, -50.421457998115514, 68.6959562765679, 83.6037650659196, 129.57166651762, 108.25696155213885]
[-47.60498781772884, -67.58846570330932, 80.70960332846, 107.92758500233076, 56.1929464338408, 36.28226198433663]
[-6.713410238049544, -44.48857810012402, 27.05644566201552, 126.69033321840922, 84.16753321747503, -13.443414193316547]
[11.29999815155791, -31.767924506865555, 26.67635929508265, 116.1572389521441, 102.76126157235235, -39.065011053165136]
if __name__ == '__main__':

    ROBOT_IP  = "172.28.60.10"

    app = zivid.Application()
    camera = app.connect_camera()
    settings = zivid.Settings(acquisitions=[zivid.Settings.Acquisition()])

    robot = URRobot(ROBOT_IP)

    robot.move_joints([21.020673859448575, -129.7666080964604, 104.25056064258263, 81.83820214660633, 100.53330850660755, 16.996264928774533], speed=0.1)

    robot.move_joints([49.357286282302866, -50.421457998115514, 68.6959562765679, 83.6037650659196, 129.57166651762, 108.25696155213885], speed=0.1)
    robot.move_joints([21.16476182263187, -108.9299139200426, 126.97599336980574, 31.394536710772503, 106.36870794476464, 20.57311888389432], speed=0.1)
    robot.move_joints([-47.60498781772884, -67.58846570330932, 80.70960332846, 107.92758500233076, 56.1929464338408, 36.28226198433663], speed=0.1)

    robot.move_joints([-6.713410238049544, -44.48857810012402, 27.05644566201552, 126.69033321840922, 84.16753321747503, -13.443414193316547], speed=0.1)
    robot.move_joints([11.29999815155791, -31.767924506865555, 26.67635929508265, 116.1572389521441, 102.76126157235235, -39.065011053165136], speed=0.1)

    robot.move_joints([21.020673859448575, -129.7666080964604, 104.25056064258263, 81.83820214660633, 100.53330850660755, 16.996264928774533], speed=0.1)

    frame = camera.capture(settings)
    xyz = frame.point_cloud().copy_data("xyz") # Get point coordinates as [Height,Width,3] float array
    rgba = frame.point_cloud().copy_data("rgba") # Get point colors as [Height,Width,4] uint8 array
